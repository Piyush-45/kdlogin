{"version":3,"sources":["firebase.js","context/AuthContext.js","components/Form.js","images/logo2.png","components/Login.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","AuthContext","createContext","AuthProvider","children","useState","mobile","setMobile","otp","setOtp","recaptchaVerifierRef","useRef","confirmationResultRef","isVerified","setIsVerified","configureCaptcha","window","recaptchaVerifier","auth","RecaptchaVerifier","size","callback","response","onSignInSubmit","console","log","defaultCountry","current","e","preventDefault","phoneNumber","signInWithPhoneNumber","then","confirmationResult","catch","error","Provider","value","onSubmitOTP","code","confirm","result","user","JSON","stringify","handleChange","target","name","Form","address","email","gstNumber","formData","setFormData","prevData","className","action","method","onSubmit","location","href","htmlFor","type","id","onChange","required","Login","useContext","src","logo","alt","placeholder","App","exact","path","element","ReactDOM","render","StrictMode","classname","document","getElementById"],"mappings":"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","file":"static/js/main.66541dd8.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCmtfTwHKUSbZfWqxKFexLMLAeJ0UdN9qM\",\n  authDomain: \"kdhandlooms.firebaseapp.com\",\n  projectId: \"kdhandlooms\",\n  storageBucket: \"kdhandlooms.appspot.com\",\n  messagingSenderId: \"967229483680\",\n  appId: \"1:967229483680:web:466fd12819f9b99f6db7c5\",\n  measurementId: \"G-5346GL5872\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  \nexport default firebase\n","// AuthContext.js\r\nimport React, { createContext, useState, useRef, useContext } from 'react';\r\nimport firebase from '../firebase';\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [mobile, setMobile] = useState('');\r\n    const [otp, setOtp] = useState('');\r\n    const recaptchaVerifierRef = useRef(null);\r\n    const confirmationResultRef = useRef(null);\r\n    const [isVerified, setIsVerified] = useState(false);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        if (name === 'mobile') {\r\n            setMobile(value);\r\n        } else if (name === 'otp') {\r\n            setOtp(value);\r\n        }\r\n    };\r\n\r\n    const configureCaptcha = () => {\r\n        window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('sign-in-button', {\r\n            size: 'invisible',\r\n            callback: (response) => {\r\n                // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n                onSignInSubmit();\r\n                console.log('Recaptca verified');\r\n            },\r\n            defaultCountry: 'IN',\r\n        });\r\n\r\n        recaptchaVerifierRef.current = window.recaptchaVerifier;\r\n    };\r\n\r\n    const onSignInSubmit = (e) => {\r\n        e.preventDefault();\r\n        configureCaptcha();\r\n        const phoneNumber = '+91' + mobile;\r\n        console.log(phoneNumber);\r\n\r\n        firebase\r\n            .auth()\r\n            .signInWithPhoneNumber(phoneNumber, recaptchaVerifierRef.current)\r\n            .then((confirmationResult) => {\r\n                confirmationResultRef.current = confirmationResult;\r\n                // console.log(confirmationResult);\r\n                console.log('OTP has been sent');\r\n                \r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const onSubmitOTP = (e) => {\r\n        e.preventDefault();\r\n        const code = otp;\r\n        console.log(code);\r\n\r\n        confirmationResultRef.current\r\n            .confirm(code)\r\n            .then((result) => {\r\n                const user = result.user;\r\n                console.log(JSON.stringify(user));\r\n                console.log('User is verified');\r\n                setIsVerified(true)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n\r\n\r\n    return <AuthContext.Provider value={{ isVerified, setIsVerified, onSubmitOTP, handleChange, onSignInSubmit }}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n","import React, { useState } from 'react';\r\nimport './Form.css'; // Import your custom CSS file for styling (optional)\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\nconst Form = () => {\r\n    // const navigate = useNavigate();\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        address: '',\r\n        email: '',\r\n        gstNumber: '',\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Process the form data here (e.g., submit to backend or perform validation)\r\n        console.log(formData);\r\n        \r\n        // Redirect the user after form submission\r\n        window.location.href = 'https://kdhandloomscheck2.vercel.app/';\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\"> {/* Add a class name to the container for styling */}\r\n            <h2>PLEASE fill basic details to continue</h2>\r\n            <form action='https://formspree.io/f/mrgwezga' method='POST' onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Name:</label>\r\n                    <input type=\"text\" id=\"name\" name=\"name\" value={formData.name} onChange={handleChange} required />\r\n                </div>\r\n\r\n                <div className=\"form-group text-2xl\">\r\n                    <label htmlFor=\"address\">Address:</label>\r\n                    <input type=\"text\" id=\"address\" name=\"address\" value={formData.address} onChange={handleChange} required />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email ID:</label>\r\n                    <input type=\"email\" id=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"gstNumber\">GST Number:</label>\r\n                    <input type=\"text\" id=\"gstNumber\" name=\"gstNumber\" value={formData.gstNumber} onChange={handleChange} />\r\n                </div>\r\n\r\n                {/* < type=\"submit\">Submit</button> */}\r\n                <input type=\"submit\" value=\"Submit\" className='form-btn'/>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","export default __webpack_public_path__ + \"static/media/logo2.4e7888a8.png\";","import React from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport Form from './Form';\r\nimport \"./login.css\"\r\nimport logo from \"../images/logo2.png\"\r\n// import otp from \"../images/logo.jpeg\"\r\n// import userImg from \"../images/user.png\"\r\n\r\nconst Login = () => {\r\n    const { onSubmitOTP, handleChange, onSignInSubmit, isVerified } = useAuth();\r\n\r\n    if (isVerified) {\r\n        return <Form />;\r\n    } else {\r\n        return (\r\n            <div className='login_parent_container'>\r\n                <img src={logo} alt=\"\" className='logo-img'/>\r\n                <h3>Verify Your Mobile Number to continue</h3>\r\n                <form onSubmit={onSignInSubmit} className='login-form'>\r\n                    <div id=\"sign-in-button\"></div>\r\n                    <input type=\"number\" name=\"mobile\" placeholder=\"Mobile number\" required onChange={handleChange} />\r\n                    <button type=\"submit\" className='btn'>Submit</button>\r\n                </form>\r\n                <form onSubmit={onSubmitOTP} className='otp-form login-form'>\r\n                    <input type=\"number\" name=\"otp\" placeholder=\"OTP Number\" required onChange={handleChange} />\r\n                    <button type=\"submit\" className='btn'>Submit</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Login from './components/Login';\n\n// import MainPage from './pages/MainPage';\n\nconst App = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route exact path=\"/\" element={<Login/>} />\n        {/* <Route path=\"/custom-page\" element={<MainPage/>} /> */}\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\"\nimport { AuthProvider } from './context/AuthContext';\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App classname=\"bg-red-900\"/>\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}